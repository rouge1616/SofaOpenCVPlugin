/******************************************************************************
*       SOFA, Simulation Open-Framework Architecture, version 1.0 RC 1        *
*                (c) 2006-2011 MGH, INRIA, USTL, UJF, CNRS                    *
*                                                                             *
* This library is free software; you can redistribute it and/or modify it     *
* under the terms of the GNU Lesser General Public License as published by    *
* the Free Software Foundation; either version 2.1 of the License, or (at     *
* your option) any later version.                                             *
*                                                                             *
* This library is distributed in the hope that it will be useful, but WITHOUT *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License *
* for more details.                                                           *
*                                                                             *
* You should have received a copy of the GNU Lesser General Public License    *
* along with this library; if not, write to the Free Software Foundation,     *
* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA.          *
*******************************************************************************
*                               SOFA :: Plugins                               *
*                                                                             *
* Authors: The SOFA Team and external contributors (see Authors.txt)          *
*                                                                             *
* Contact information: contact@sofa-framework.org                             *
******************************************************************************/
/*
 * SofaARBase.h
 *
 *  Created on: 10 apr. 2012
 *      Author: 
 */

#ifndef SOFAAR_SOFAARCAPSULE_H
#define SOFAAR_SOFAARCAPSULE_H

// sofa
#include "initSofaAR.h"
#include <sofa/core/visual/VisualModel.h>


// boost
#include <boost/archive/binary_oarchive.hpp>
#include <boost/archive/binary_iarchive.hpp>
#include <boost/serialization/string.hpp>
#include <boost/serialization/vector.hpp>

#include <iostream>
#include <sstream>
#include <string>
#include <vector>

class SofaARCapsule
{

public:
    	SofaARCapsule();
	SofaARCapsule(
		std::string img,
		int imgDepth,
		int imgNC,
		int imgWidth,
		int imgHeight,
		std::vector<float> currentPositionX,
		std::vector<float> currentPositionY,
		std::vector<float> currentPositionZ,
		std::vector<int> status,
		std::vector<double> currentQualities
        );
	~SofaARCapsule();

	std::string getImg();
	int getImgDepth();
	int getImgNC();
	int getImgWidth();
	int getImgHeight();
	std::vector<float> getCurrentPositionX();
	std::vector<float> getCurrentPositionY();
	std::vector<float> getCurrentPositionZ();
	std::vector<int> getStatus();
	std::vector<double> getCurrentQualities();

private:
  	friend class boost::serialization::access;

  	template <typename Archive>
  	void serialize(Archive &ar, const unsigned int version)
  	{
  	  ar & m_img;
  	  ar & m_imgDepth;
  	  ar & m_imgNC;
  	  ar & m_imgWidth;
  	  ar & m_imgHeight;
  	  ar & m_currentPositionX;
  	  ar & m_currentPositionY;
  	  ar & m_currentPositionZ;
  	  ar & m_status;
  	  ar & m_currentQualities;
  	}
	std::string m_img;
	int m_imgDepth;
	int m_imgNC;
	int m_imgWidth;
	int m_imgHeight;
	std::vector<float> m_currentPositionX;
	std::vector<float> m_currentPositionY;
	std::vector<float> m_currentPositionZ;
	std::vector<int> m_status;
	std::vector<double> m_currentQualities;
};


#endif // SOFAAR_SOFAARCAPSULE_H
